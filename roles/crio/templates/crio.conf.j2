[crio]
  log_dir = "/var/log/crio/pods"
  root = "{{ crio.datadir | default('/var/lib/containers/storage') }}"
  runroot = "/run/containers/storage"
  storage_driver = "overlay"
  storage_option = [
    "overlay.mountopt=nodev,metacopy=on",
  ]
  version_file = "/var/run/crio/version"
  version_file_persist = ""
  internal_repair = false

  [crio.api]
    listen = "/var/run/crio/crio.sock"
    stream_address = "127.0.0.1"
    stream_port = "0"
    stream_idle_timeout = ""
    stream_tls_cert = ""
    stream_tls_key = ""
    stream_tls_ca = ""
    grpc_max_send_msg_size = 83886080
    grpc_max_recv_msg_size = 83886080

  [crio.image]
    default_transport = "docker://"
    global_auth_file = ""
    pause_image = "{{ REGISTRY_URL | default('https://registry.aliyuncs.com') | urlsplit('hostname') }}{% if REGISTRY_URL | default('https://registry.aliyuncs.com') | urlsplit('port') is not none %}:{{REGISTRY_URL | default('https://registry.aliyuncs.com') | urlsplit('port')}}{% endif %}{% if REGISTRY_URL | default('https://registry.aliyuncs.com') | urlsplit('path') is not none %}{{ REGISTRY_URL | default('https://registry.aliyuncs.com') | urlsplit('path') }}{% endif %}/google_containers/pause:{{ KUBE_VERSION | component_version | community.general.json_query('plugin.pause') }}"
    pause_image_auth_file = ""
    pause_command = "/pause"
    signature_policy = ""
    signature_policy_dir = "/etc/crio/policies"
    insecure_registries = [
    ]
    image_volumes = "mkdir"
    big_files_temporary_dir = ""

  [crio.metrics]
    enable_metrics = true
    metrics_port = 9090
    metrics_socket = ""
    metrics_collectors = [
      "operations",
      "operations_latency_microseconds_total",
      "operations_latency_microseconds",
      "operations_errors",
      "image_pulls_by_digest",
      "image_pulls_by_name",
      "image_pulls_by_name_skipped",
      "image_pulls_failures",
      "image_pulls_successes",
      "image_pulls_layer_size",
      "image_layer_reuse",
      "containers_events_dropped_total",
      "containers_oom_total",
      "containers_oom",
      "processes_defunct",
      "operations_total",
      "operations_latency_seconds",
      "operations_latency_seconds_total",
      "operations_errors_total",
      "image_pulls_bytes_total",
      "image_pulls_skipped_bytes_total",
      "image_pulls_failure_total",
      "image_pulls_success_total",
      "image_layer_reuse_total",
      "containers_oom_count_total",
      "containers_seccomp_notifier_count_total",
      "resources_stalled_at_stage",
    ]

  [crio.network]
    network_dir = "/etc/cni/net.d/"
    plugin_dirs = [
      "/opt/cni/bin/",
    ]

  [crio.runtime]
    additional_devices = []
    apparmor_profile = "crio-default"
    bind_mount_prefix = ""
    cgroup_manager = "systemd"
    conmon = "/usr/local/bin/crio-conmon"
    conmon_cgroup = "podruntime.slice"
    conmon_env = ["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", "TERM=xterm"]
    container_exits_dir = "/var/run/crio/exits"
    ctr_stop_timeout = 30
    default_capabilities = [
      "CHOWN",
      "DAC_OVERRIDE",
      "FSETID",
      "FOWNER",
      "SETGID",
      "SETUID",
      "SETPCAP",
      "NET_BIND_SERVICE",
      "KILL",
    ]
    default_env = []
{% if gpu | default(false) %}
    default_runtime = "nvidia"
{% else %}
    default_runtime = "runc"
{% endif %}
    default_sysctls = []
    drop_infra_ctr = false
    hooks_dir = [
      "/usr/share/containers/oci/hooks.d",
    ]
    log_filter = ""
    log_level = "info"
    log_size_max = -1
    log_to_journald = false
    manage_ns_lifecycle = true
    namespaces_dir = "/var/run"
    no_pivot = false
    pids_limit = 0
    pinns_path = "/usr/local/bin/pinns"
    read_only = false
    seccomp_profile = ""
    seccomp_use_default_when_empty = false
    selinux = false
    separate_pull_cgroup = ""
    uid_mappings = ""
    gid_mappings = ""

    [crio.runtime.runtimes]
{% if gpu | default(false) %}
      [crio.runtime.runtimes.nvidia]
        runtime_path = "/usr/bin/nvidia-container-runtime"
        runtime_type = "oci"
{% else %}
      [crio.runtime.runtimes.crun]
        runtime_path = "/usr/local/bin/crio-crun"
        monitor_path = "/usr/local/bin/crio-conmon"
        allowed_annotations = [
            "io.containers.trace-syscall",
        ]

      [crio.runtime.runtimes.runc]
        runtime_path = "/usr/local/bin/crio-runc"
        monitor_path = "/usr/local/bin/crio-conmon"
{% endif %}
